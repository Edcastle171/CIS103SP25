import tkinter as tk
from tkinter import messagebox
import random

class GuessNumberGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Guess the Number Game")
        self.root.geometry("500x500")
        self.create_start_screen()

    def create_start_screen(self):
        self.clear_window()

        tk.Label(self.root, text="Enter your name:", font=("Arial", 12)).pack(pady=10)
        self.name_entry = tk.Entry(self.root)
        self.name_entry.pack()

        tk.Label(self.root, text="Max number of guesses (1-50):", font=("Arial", 12)).pack(pady=10)
        self.max_guesses_entry = tk.Entry(self.root)
        self.max_guesses_entry.pack()
        self.max_guesses_entry.insert(0, "15")

        tk.Button(self.root, text="Start Game", command=self.start_game).pack(pady=20)

    def start_game(self):
        name = self.name_entry.get().strip()
        max_guesses_input = self.max_guesses_entry.get().strip()

        if not name:
            messagebox.showerror("Input Error", "Please enter your name.")
            return

        try:
            max_guesses = int(max_guesses_input)
            if not 1 <= max_guesses <= 50:
                raise ValueError
        except ValueError:
            messagebox.showerror("Input Error", "Max guesses must be an integer between 1 and 50.")
            return

        self.player_name = name
        self.max_guesses = max_guesses
        self.remaining_guesses = max_guesses
        self.total_guesses = 0
        self.invalid_guesses = 0
        self.number_to_guess = random.randint(1, 150)

        self.create_game_screen()

    def create_game_screen(self):
        self.clear_window()

        tk.Label(self.root, text=f"Player: {self.player_name}", font=("Arial", 12)).pack()
        self.guesses_label = tk.Label(self.root, text=f"Guesses Left: {self.remaining_guesses}", font=("Arial", 12))
        self.guesses_label.pack(pady=5)

        tk.Label(self.root, text="Enter your guess (1-150):", font=("Arial", 12)).pack()
        self.guess_entry = tk.Entry(self.root)
        self.guess_entry.pack()

        tk.Button(self.root, text="Submit Guess", command=self.check_guess).pack(pady=10)

        self.feedback_label = tk.Label(self.root, text="", font=("Arial", 12), fg="blue")
        self.feedback_label.pack()

        self.result_label = tk.Label(self.root, text="", font=("Arial", 12, "bold"))
        self.result_label.pack(pady=10)

    def check_guess(self):
        guess_input = self.guess_entry.get().strip()

        try:
            guess = int(guess_input)
            if not 1 <= guess <= 150:
                raise ValueError
        except ValueError:
            self.feedback_label.config(text="Invalid input! Must be an integer between 1 and 150.", fg="red")
            self.invalid_guesses += 1
            return

        self.total_guesses += 1
        self.remaining_guesses -= 1

        if guess == self.number_to_guess:
            self.result_label.config(text=f"Congrats, {self.player_name}! Ya freakin' nailed it!", fg="green")
            self.end_game(True)
        elif guess < self.number_to_guess:
            self.feedback_label.config(text="Too low, bud!", fg="orange")
        else:
            self.feedback_label.config(text="Shootin' too high, killer!", fg="black")

        self.guesses_label.config(text=f"Guesses Left: {self.remaining_guesses}")

        if self.remaining_guesses == 0 and guess != self.number_to_guess:
            self.result_label.config(text=f"Boooo, you suck! The number was {self.number_to_guess}, get lost!", fg="red")
            self.end_game(False)

    def end_game(self, won):
        self.guess_entry.config(state="disabled")

        summary = (
            f"Guesses made: {self.total_guesses}\n"
            f"Invalid guesses: {self.invalid_guesses}"
        )
        tk.Label(self.root, text=summary, font=("Arial", 10)).pack()

        tk.Button(self.root, text="Play Again", command=self.create_start_screen).pack(pady=10)
        tk.Button(self.root, text="Exit", command=self.root.quit).pack()

    def clear_window(self):
        for widget in self.root.winfo_children():
            widget.destroy()

if __name__ == "__main__":
    root = tk.Tk()
    app = GuessNumberGame(root)
    root.mainloop()
